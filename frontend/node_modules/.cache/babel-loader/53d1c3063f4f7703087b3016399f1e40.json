{"ast":null,"code":"var _jsxFileName = \"/Users/ruichunchen/my-react/src/Context.js\";\nimport React, { Component } from 'react';\nimport items from './data';\nconst RoomContext = React.createContext(); // <RoomContext.Provider value={'hello'}\n\nclass RoomProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      houses: [],\n      sortedRooms: [],\n      featuredHouses: [],\n      loading: true\n    };\n  }\n\n  // getData{}\n  componentDidMount() {\n    //this.getData\n    let houses = this.formatData(items);\n    console.log(houses);\n    let featuredHouses = houses.filter(house => house.featured === true);\n    this.setState({\n      houses,\n      featuredHouses,\n      sortedRooms: houses,\n      loading: false\n    });\n  }\n\n  formatData(items) {\n    let tempItems = items.map(item => {\n      let id = item.sys.id;\n      let images = item.fields.images.map(image => image.fields.file.url);\n      let house = { ...item.fields,\n        images,\n        id\n      }; //images : images overwrite\n\n      return house;\n    });\n    return tempItems;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(RoomContext.Provider, {\n      value: { ...this.state\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  }\n\n}\n\nconst RoomConsumer = RoomContext.Consumer;\nexport { RoomProvider, RoomConsumer, RoomContext };","map":{"version":3,"sources":["/Users/ruichunchen/my-react/src/Context.js"],"names":["React","Component","items","RoomContext","createContext","RoomProvider","state","houses","sortedRooms","featuredHouses","loading","componentDidMount","formatData","console","log","filter","house","featured","setState","tempItems","map","item","id","sys","images","fields","image","file","url","render","props","children","RoomConsumer","Consumer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,QAAlB;AAEA,MAAMC,WAAW,GAAGH,KAAK,CAACI,aAAN,EAApB,C,CACA;;AACA,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACjCK,KADiC,GAC3B;AACFC,MAAAA,MAAM,EAAC,EADL;AAEFC,MAAAA,WAAW,EAAE,EAFX;AAGFC,MAAAA,cAAc,EAAE,EAHd;AAIFC,MAAAA,OAAO,EAAE;AAJP,KAD2B;AAAA;;AAOjC;AAEAC,EAAAA,iBAAiB,GAAE;AACf;AACA,QAAIJ,MAAM,GAAG,KAAKK,UAAL,CAAgBV,KAAhB,CAAb;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACA,QAAIE,cAAc,GAAGF,MAAM,CAACQ,MAAP,CAAcC,KAAK,IAAIA,KAAK,CAACC,QAAN,KAAmB,IAA1C,CAArB;AACA,SAAKC,QAAL,CAAc;AACVX,MAAAA,MADU;AAEVE,MAAAA,cAFU;AAGVD,MAAAA,WAAW,EAAED,MAHH;AAIVG,MAAAA,OAAO,EAAE;AAJC,KAAd;AAMH;;AAEDE,EAAAA,UAAU,CAACV,KAAD,EAAO;AACb,QAAIiB,SAAS,GAAGjB,KAAK,CAACkB,GAAN,CAAUC,IAAI,IAAI;AAC9B,UAAIC,EAAE,GAAGD,IAAI,CAACE,GAAL,CAASD,EAAlB;AACA,UAAIE,MAAM,GAAGH,IAAI,CAACI,MAAL,CAAYD,MAAZ,CAAmBJ,GAAnB,CAAuBM,KAAK,IAAIA,KAAK,CAACD,MAAN,CAAaE,IAAb,CAAkBC,GAAlD,CAAb;AACA,UAAIZ,KAAK,GAAG,EAAC,GAAGK,IAAI,CAACI,MAAT;AAAiBD,QAAAA,MAAjB;AAAyBF,QAAAA;AAAzB,OAAZ,CAH8B,CAGY;;AAC1C,aAAON,KAAP;AACH,KALe,CAAhB;AAMA,WAAOG,SAAP;AACH;;AAEDU,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE,EAAC,GAAG,KAAKvB;AAAT,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKwB,KAAL,CAAWC,QADhB,CADJ;AAKH;;AAtCgC;;AAyCrC,MAAMC,YAAY,GAAG7B,WAAW,CAAC8B,QAAjC;AAEA,SAAO5B,YAAP,EAAqB2B,YAArB,EAAmC7B,WAAnC","sourcesContent":["import React, { Component } from 'react'\nimport items from './data';\n\nconst RoomContext = React.createContext();\n// <RoomContext.Provider value={'hello'}\nclass RoomProvider extends Component {\n    state={\n        houses:[],\n        sortedRooms: [],\n        featuredHouses: [],\n        loading: true\n    }\n    // getData{}\n\n    componentDidMount(){\n        //this.getData\n        let houses = this.formatData(items);\n        console.log(houses);\n        let featuredHouses = houses.filter(house => house.featured === true);\n        this.setState({\n            houses, \n            featuredHouses, \n            sortedRooms: houses, \n            loading: false\n        });\n    }\n\n    formatData(items){\n        let tempItems = items.map(item => {\n            let id = item.sys.id;\n            let images = item.fields.images.map(image => image.fields.file.url);\n            let house = {...item.fields, images, id}; //images : images overwrite\n            return house;\n        });\n        return tempItems;\n    }\n\n    render() {\n        return (\n            <RoomContext.Provider value={{...this.state}}>\n                {this.props.children}\n            </RoomContext.Provider>\n        )\n    }\n}\n\nconst RoomConsumer = RoomContext.Consumer;\n\nexport{RoomProvider, RoomConsumer, RoomContext}"]},"metadata":{},"sourceType":"module"}