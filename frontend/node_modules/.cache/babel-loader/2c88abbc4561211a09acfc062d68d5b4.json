{"ast":null,"code":"var _jsxFileName = \"/Users/ruichunchen/my-react/src/components/SignupForm.js\";\nimport React, { Component } from 'react';\nimport InputFile from './InputField';\nimport SubmitButton from './SubmitButton';\nimport UserStore from '../stores/UserStore';\nimport InputFiled from './InputField';\n\nclass SignupForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      confirmPassword: '',\n      email: '',\n      buttonDisabled: false\n    };\n  }\n\n  setInputValue(property, val) {\n    val = val.trim();\n\n    if (val.length > 20) {\n      return;\n    }\n\n    this.setState({\n      [property]: val\n    });\n  }\n\n  resetForm() {\n    this.setState({\n      username: '',\n      password: '',\n      confirmPassword: '',\n      email: '',\n      buttonDisabled: false\n    });\n  }\n\n  async doSignup() {\n    var regex = /hello/;\n    var str = 'hello world';\n    var result = regex.test(str);\n    console.log(result);\n    console.log(\"hehe\");\n\n    if (!this.state.username) {\n      return;\n    }\n\n    if (!this.state.password) {\n      return;\n    }\n\n    if (!this.state.confirmPassword) {\n      return;\n    }\n\n    if (this.state.password !== this.state.confirmPassword) {\n      alert('not mathc');\n      this.resetForm();\n      return;\n    }\n\n    if (!this.state.email) {\n      return;\n    }\n\n    this.setState({\n      buttonDisabled: true\n    });\n    console.log(\"haha\");\n\n    try {\n      let res = await fetch('/signup', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: this.state.username,\n          password: this.state.password,\n          email: this.state.email\n        })\n      });\n      console.log(res);\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n      } else if (result && result.success === false) {\n        this.resetForm();\n        alert(result.msg);\n      }\n    } catch (e) {\n      console.log(e);\n      this.resetForm();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loginForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(InputFiled, {\n      type: \"text\",\n      placeholder: \"Username\",\n      value: this.state.username ? this.state.username : '',\n      onChange: val => this.setInputValue('username', val),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(InputFiled, {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: this.state.password ? this.state.password : '',\n      onChange: val => this.setInputValue('password', val),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(InputFiled, {\n      type: \"password\",\n      placeholder: \"Comfirm Password\",\n      value: this.state.confirmPassword ? this.state.confirmPassword : '',\n      onChange: val => this.setInputValue('confirmPassword', val),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(InputFiled, {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: this.state.email ? this.state.email : '',\n      onChange: val => this.setInputValue('email', val),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(SubmitButton, {\n      text: \"Sign Up\",\n      disabled: this.state.buttonDisabled,\n      onClick: () => this.doSignup(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default SignupForm;","map":{"version":3,"sources":["/Users/ruichunchen/my-react/src/components/SignupForm.js"],"names":["React","Component","InputFile","SubmitButton","UserStore","InputFiled","SignupForm","constructor","props","state","username","password","confirmPassword","email","buttonDisabled","setInputValue","property","val","trim","length","setState","resetForm","doSignup","regex","str","result","test","console","log","alert","res","fetch","method","headers","body","JSON","stringify","json","success","isLoggedIn","msg","e","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport InputFile from './InputField';\nimport SubmitButton from './SubmitButton';\nimport UserStore from '../stores/UserStore';\nimport InputFiled from './InputField';\n\nclass SignupForm extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            username: '',\n            password: '',\n            confirmPassword: '',\n            email: '',\n            buttonDisabled: false\n        }\n    }\n    setInputValue(property, val){\n        val = val.trim();\n        if(val.length > 20){\n            return;\n        }\n        this.setState({\n            [property]: val\n        })\n    }\n\n    resetForm(){\n        this.setState({\n            username: '',\n            password: '',\n            confirmPassword: '',\n            email: '',\n            buttonDisabled: false\n        })\n    }\n\n    async doSignup(){\n        var regex = /hello/;\n        var str = 'hello world';\n        var result = regex.test(str);\n        console.log(result);\n        console.log(\"hehe\");\n        if(!this.state.username){\n            return;\n        }\n        if(!this.state.password){\n            return;\n        }\n        if(!this.state.confirmPassword){\n            return;\n        }\n        if(this.state.password !== this.state.confirmPassword){\n            alert('not mathc');\n            this.resetForm();\n            return;\n        }\n        if(!this.state.email){\n            return;\n        }\n        this.setState({\n            buttonDisabled: true\n        })\n        console.log(\"haha\");\n        try{\n            let res = await fetch('/signup', {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    username: this.state.username,\n                    password: this.state.password,\n                    email: this.state.email\n                })\n            });\n            console.log(res);\n            let result = await res.json();\n            if(result && result.success){\n                UserStore.isLoggedIn = true;\n                UserStore.username = result.username;\n            }else if(result && result.success === false){\n                this.resetForm();\n                alert(result.msg);\n            }\n        }catch(e){\n            console.log(e);\n            this.resetForm();\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"loginForm\">\n                <InputFiled\n                    type='text'\n                    placeholder='Username'\n                    value={this.state.username ? this.state.username : ''}\n                    onChange={ (val) => this.setInputValue('username', val) }\n                />\n                <InputFiled\n                    type='password'\n                    placeholder='Password'\n                    value={this.state.password ? this.state.password : ''}\n                    onChange={ (val) => this.setInputValue('password', val) }\n                />\n                <InputFiled\n                    type='password'\n                    placeholder='Comfirm Password'\n                    value={this.state.confirmPassword ? this.state.confirmPassword : ''}\n                    onChange={ (val) => this.setInputValue('confirmPassword', val) }\n                />\n                <InputFiled\n                    type='email'\n                    placeholder='Email'\n                    value={this.state.email ? this.state.email : ''}\n                    onChange={ (val) => this.setInputValue('email', val) }\n                />\n                <SubmitButton\n                    text='Sign Up'\n                    disabled={this.state.buttonDisabled}\n                    onClick={ () => this.doSignup() }\n                />\n            </div>\n        )\n    }\n}\nexport default SignupForm;"]},"metadata":{},"sourceType":"module"}